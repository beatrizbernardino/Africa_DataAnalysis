{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Projeto 1 - Ciência dos Dados"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Nome: Beatriz Rianho Bernardino"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introdução"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"3\">  <p style='text-align: justify;'> Criada em 2002 e inspirada na União Europeia, a União Africana é uma organização internacional que tem como objetivo promover a democratização, paz e o desenvolvimento econômico em todo o continente. Atualmente, 55 países fazem parte dessa organização. Apesar da UA ter promovido melhorias, a África continua sendo um continente subdesenvolvido no qual há países com uma boa economia, como a África do Sul e outros em que as pessoas passam por diversas dificuldades diárias, como falta de acesso ao sanemanto e água, por exemplo. Esse fato deve ser levado em consideração durante o projeto pois há uma desconformidade entre alguns dados, e, por isso, toda a análise foi feita uilizando-se a mediana ao invés da média. </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pergunta (s) a ser respondida"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"3\">Após a criação da União Africana, os países membros tiveram um aumento de investimentos, e por isso a expectativa de vida aumentou ? </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Explicação da hipótese e mecanismo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"3\"> **Hipótese**: <p style='text-align: justify;'> \n",
    "    Os países membros provavelmente obtiveram uma melhora no índice de investimentos, e,consequentemente, maior acesso ao saneamento, aumentando a expectativa de vida.  </p> </font>\n",
    "\n",
    "<font size=\"3\">  <p style='text-align: justify;'> \n",
    "**Mecanismo**:  <p style='text-align: justify;'> \n",
    "        Como um dos objetivos da União Africana é promover odesenvolvimento econômico, foi criado um programa chamado  Nova Parceria para o Desenvolvimento da África, que incentiva o aumento dos investimentos de países extrangeiros na África. Por isso, junto com as políticas de proteção dos direitos humanos, se realmente houve um aumento de investimentos, a economia  deve ter melhorado, e, consequentemente, o governo promoveu uma melhora no saneamento básico.  Como o saneamento básico ajuda a diminuir a proliferação de doenças, a expectativa de vida também deve ter aumentado. </p> </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Referências: \n",
    "- http://theconversation.com/lifestyle-diseases-could-scupper-africas-rising-life-expectancy-107220. <br> ( mostra que uma das causas para a expectativa de vida ter aumentado é devido a melhora no saneamento )\n",
    "\n",
    "\n",
    "- https://www.impactatafrica.org/sites/default/files/publications/impact_investment_in_africa_action_plan_2016_english.pdf ( item 2 mostra dados de que desde 2002, ano em que a UA foi criada, o número de investimentos aumentou)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bases de dados usadas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"3\"> <p style='text-align: justify;'> \n",
    "\n",
    "- Dados sobre os **INVESTIMENTOS**: <br>\n",
    "https://data.worldbank.org/indicator/NE.GDI.TOTL.ZSte \n",
    "\n",
    "<BR>\n",
    "\n",
    "- Dados sobre **SANEAMENTO**: <br>\n",
    "https://data.worldbank.org/indicator/SH.STA.SMSS.ZS\n",
    "\n",
    "<BR>\n",
    "    \n",
    "- Dados sobre **EXPECTATIVA DE VIDA**: <Br>\n",
    "https://www.gapminder.org/data/documentation/gd004/\n",
    "\n",
    "\n",
    "</font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Análise de dados"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Análise dos investimentos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importando as bibliotecas\n",
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import os\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"2\"> <p style='text-align: justify;'> Primeiramente, vamos observar se realmente houve uma melhora nos investimentos devido à criação da UA, ou se foi apenas um aumento que ocorreu no mundo inteiro: </font>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "data=pd.read_excel('investimentos.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>1960</th>\n",
       "      <th>1961</th>\n",
       "      <th>1962</th>\n",
       "      <th>1963</th>\n",
       "      <th>1964</th>\n",
       "      <th>1965</th>\n",
       "      <th>1966</th>\n",
       "      <th>1967</th>\n",
       "      <th>1968</th>\n",
       "      <th>...</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "      <th>2012</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "      <th>Membros</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>16.1</td>\n",
       "      <td>16.6</td>\n",
       "      <td>19.1</td>\n",
       "      <td>14.2</td>\n",
       "      <td>13.9</td>\n",
       "      <td>11.3</td>\n",
       "      <td>8.41</td>\n",
       "      <td>5.18</td>\n",
       "      <td>6.47</td>\n",
       "      <td>...</td>\n",
       "      <td>17.9</td>\n",
       "      <td>17.9</td>\n",
       "      <td>16.6</td>\n",
       "      <td>16.8</td>\n",
       "      <td>17.2</td>\n",
       "      <td>18.1</td>\n",
       "      <td>19.4</td>\n",
       "      <td>17.7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>não</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Albania</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>34.6</td>\n",
       "      <td>30.3</td>\n",
       "      <td>31.4</td>\n",
       "      <td>28.3</td>\n",
       "      <td>28.4</td>\n",
       "      <td>24.6</td>\n",
       "      <td>24.4</td>\n",
       "      <td>24.8</td>\n",
       "      <td>25.2</td>\n",
       "      <td>não</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>42.2</td>\n",
       "      <td>47.2</td>\n",
       "      <td>35.4</td>\n",
       "      <td>28.9</td>\n",
       "      <td>21.8</td>\n",
       "      <td>22.6</td>\n",
       "      <td>17.30</td>\n",
       "      <td>23.40</td>\n",
       "      <td>27.90</td>\n",
       "      <td>...</td>\n",
       "      <td>46.9</td>\n",
       "      <td>41.4</td>\n",
       "      <td>38.1</td>\n",
       "      <td>39.2</td>\n",
       "      <td>43.4</td>\n",
       "      <td>45.6</td>\n",
       "      <td>50.7</td>\n",
       "      <td>50.7</td>\n",
       "      <td>47.8</td>\n",
       "      <td>sim</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 60 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       country  1960  1961  1962  1963  1964  1965   1966   1967   1968  \\\n",
       "0  Afghanistan  16.1  16.6  19.1  14.2  13.9  11.3   8.41   5.18   6.47   \n",
       "1      Albania   NaN   NaN   NaN   NaN   NaN   NaN    NaN    NaN    NaN   \n",
       "2      Algeria  42.2  47.2  35.4  28.9  21.8  22.6  17.30  23.40  27.90   \n",
       "\n",
       "    ...     2009  2010  2011  2012  2013  2014  2015  2016  2017  Membros  \n",
       "0   ...     17.9  17.9  16.6  16.8  17.2  18.1  19.4  17.7   NaN      não  \n",
       "1   ...     34.6  30.3  31.4  28.3  28.4  24.6  24.4  24.8  25.2      não  \n",
       "2   ...     46.9  41.4  38.1  39.2  43.4  45.6  50.7  50.7  47.8      sim  \n",
       "\n",
       "[3 rows x 60 columns]"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#criando uma coluna qualitativa sobre os membros:\n",
    "\n",
    "lista=[\"Algeria\", \"Angola\", \"Benin\", 'Botswana', 'Burkina Faso', 'Burundi', 'Cape Verde',  'Cameroon','Central African Republic','Chad', 'Comoros', 'Congo, Dem. Rep.', 'Djibouti', 'Egypt', 'Equatorial Guinea', 'Eritrea', 'Eswatini', 'Ethiopia', 'Gabon', 'Gambia',  'Ghana', 'Guinea', 'Guinea-Bissau', 'Ivory Coast', 'Kenya', 'Lesotho', 'Liberia', 'Lybia',  'Madagascar' , 'Malawi',]\n",
    "membros=[]\n",
    "for pais in data[\"country\"]:\n",
    "    if pais in lista:\n",
    "        membros.append(\"sim\")\n",
    "    else: \n",
    "        membros.append(\"não\")\n",
    "        \n",
    "data[\"Membros\"]=membros\n",
    "data.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1992</th>\n",
       "      <th>1993</th>\n",
       "      <th>1994</th>\n",
       "      <th>1995</th>\n",
       "      <th>1996</th>\n",
       "      <th>1997</th>\n",
       "      <th>1998</th>\n",
       "      <th>1999</th>\n",
       "      <th>2000</th>\n",
       "      <th>2001</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Albania</th>\n",
       "      <td>5.2</td>\n",
       "      <td>13.2</td>\n",
       "      <td>17.9</td>\n",
       "      <td>21.0</td>\n",
       "      <td>21.2</td>\n",
       "      <td>20.5</td>\n",
       "      <td>21.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>31.7</td>\n",
       "      <td>38.4</td>\n",
       "      <td>37.9</td>\n",
       "      <td>40.5</td>\n",
       "      <td>37.2</td>\n",
       "      <td>37.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>38.7</td>\n",
       "      <td>35.8</td>\n",
       "      <td>34.6</td>\n",
       "      <td>30.3</td>\n",
       "      <td>31.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Algeria</th>\n",
       "      <td>30.8</td>\n",
       "      <td>29.1</td>\n",
       "      <td>30.1</td>\n",
       "      <td>30.9</td>\n",
       "      <td>25.7</td>\n",
       "      <td>22.4</td>\n",
       "      <td>27.1</td>\n",
       "      <td>26.2</td>\n",
       "      <td>23.6</td>\n",
       "      <td>26.8</td>\n",
       "      <td>30.7</td>\n",
       "      <td>30.3</td>\n",
       "      <td>33.3</td>\n",
       "      <td>31.7</td>\n",
       "      <td>30.2</td>\n",
       "      <td>34.5</td>\n",
       "      <td>37.3</td>\n",
       "      <td>46.9</td>\n",
       "      <td>41.4</td>\n",
       "      <td>38.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Argentina</th>\n",
       "      <td>16.7</td>\n",
       "      <td>19.1</td>\n",
       "      <td>19.9</td>\n",
       "      <td>17.9</td>\n",
       "      <td>18.1</td>\n",
       "      <td>19.4</td>\n",
       "      <td>19.9</td>\n",
       "      <td>18.0</td>\n",
       "      <td>16.2</td>\n",
       "      <td>14.2</td>\n",
       "      <td>12.0</td>\n",
       "      <td>15.1</td>\n",
       "      <td>17.6</td>\n",
       "      <td>18.9</td>\n",
       "      <td>18.7</td>\n",
       "      <td>20.1</td>\n",
       "      <td>19.6</td>\n",
       "      <td>16.1</td>\n",
       "      <td>17.7</td>\n",
       "      <td>18.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           1992  1993  1994  1995  1996  1997  1998  1999  2000  2001  2002  \\\n",
       "country                                                                       \n",
       "Albania     5.2  13.2  17.9  21.0  21.2  20.5  21.0  23.0  31.7  38.4  37.9   \n",
       "Algeria    30.8  29.1  30.1  30.9  25.7  22.4  27.1  26.2  23.6  26.8  30.7   \n",
       "Argentina  16.7  19.1  19.9  17.9  18.1  19.4  19.9  18.0  16.2  14.2  12.0   \n",
       "\n",
       "           2003  2004  2005  2006  2007  2008  2009  2010  2011  \n",
       "country                                                          \n",
       "Albania    40.5  37.2  37.0  39.0  38.7  35.8  34.6  30.3  31.4  \n",
       "Algeria    30.3  33.3  31.7  30.2  34.5  37.3  46.9  41.4  38.1  \n",
       "Argentina  15.1  17.6  18.9  18.7  20.1  19.6  16.1  17.7  18.4  "
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# selecionando uma janela de dados que abrangem 10 anos antes e 10 anos depois do bloco econômico ser criado\n",
    "investimento=data.set_index(\"country\")\n",
    "anos=investimento.iloc[:,32:52]\n",
    "investimentos=anos.dropna()\n",
    "investimentos.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#filtrando a tabela para os países membros e não membros\n",
    "paises_ua=investimentos[(investimentos.index=='Algeria') |(investimentos.index=='Angola')|(investimentos.index=='Benin')|(investimentos.index=='Botswana')|(investimentos.index=='Burkina Faso')|(investimentos.index=='Burundi')|(investimentos.index=='Cape Verde')|(investimentos.index=='Cameroon')|(investimentos.index=='Central African Republic')|(investimentos.index=='Chad')|(investimentos.index=='Comoros')|(investimentos.index=='Congo, Dem. Rep.')|(investimentos.index=='Djibouti')|(investimentos.index=='Egypt')|(investimentos.index=='Equatorial Guinea')|(investimentos.index=='Eritrea')|(investimentos.index=='Eswatini')|(investimentos.index=='Ethiopia')|(investimentos.index=='Gabon') |(investimentos.index=='Gambia')|(investimentos.index=='Ghana')|(investimentos.index=='Guinea')|(investimentos.index=='Guinea-Bissau')|(investimentos.index=='Ivory Coast')|(investimentos.index=='Kenya')|(investimentos.index=='Lesotho')|(investimentos.index=='Liberia')|(investimentos.index=='Lybia') |(investimentos.index=='Madagascar') |(investimentos.index=='Malawi')|(investimentos.index=='Mali')|(investimentos.index=='Mauritania')|(investimentos.index=='Mauritius')|(investimentos.index=='Morocco')|(investimentos.index=='Mozambique')|(investimentos.index=='Namibia')|(investimentos.index=='Niger')|(investimentos.index=='Nigeria')|(investimentos.index=='Rwanda')|(investimentos.index=='Senegal') |(investimentos.index=='Seychelles') |(investimentos.index=='Congo, Rep')|(investimentos.index=='Sierra Leone')|(investimentos.index=='Somalia')|(investimentos.index=='South Africa')|(investimentos.index=='South Sudan')|(investimentos.index=='Tanzania')|(investimentos.index=='Togo')|(investimentos.index=='Tunisia') |(investimentos.index=='Uganda')|(investimentos.index=='Zambia') |(investimentos.index=='Zimbabwe')]\n",
    "paises_fora=investimentos[(investimentos.index=='Brazil') | (investimentos.index=='Mexico') |(investimentos.index=='Argentina') |(investimentos.index=='Venezuela') |(investimentos.index=='Colombia') |(investimentos.index=='Chile') |(investimentos.index=='Peru') |(investimentos.index=='Ecuador') |(investimentos.index=='Dominican Republic') |(investimentos.index=='Porto Rico') |(investimentos.index=='Guatemala') |(investimentos.index=='Costa Rica') |(investimentos.index=='Bolivia') |(investimentos.index=='Uruguai') |(investimentos.index=='El Salvador') |(investimentos.index=='Panama') |(investimentos.index=='Paraguai') |(investimentos.index=='Honduras') |(investimentos.index=='Nicaragua') |(investimentos.index=='Haiti') |(investimentos.index=='Jamaica') |(investimentos.index=='Guiana') |(investimentos.index=='Suriname') |(investimentos.index=='Equatorial Guinea') |(investimentos.index=='Portugal') |(investimentos.index=='Hungary') |(investimentos.index=='Philippines')|(investimentos.index=='Swaziland') |(investimentos.index=='Fiji') |(investimentos.index=='Indonesia') |(investimentos.index=='Malaysia') |(investimentos.index=='Romania')|(investimentos.index=='Thailand')|(investimentos.index=='Singapore')|(investimentos.index=='Belgium')|(investimentos.index=='Czech Republic')|(investimentos.index=='Barbados')|(investimentos.index=='Belize')|(investimentos.index=='Croatia')|(investimentos.index=='Hungria')|(investimentos.index=='Egypt')|(investimentos.index=='El Salvador')|(investimentos.index=='Finland')|(investimentos.index=='Jordan')|(investimentos.index=='Togo')|(investimentos.index=='New Zealand') ]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**obs** : Os países selecionados para o grupo de controle são países sub-desenvolvidos ou em desenvolvimento, principalmente da América do Sul, por suas semelhanças ecônomicas com a África. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotando um boxplot de antes e depois\n",
    "colunas_antes = paises_fora.columns <2002\n",
    "colunas_depois = paises_fora.columns>=2002\n",
    "\n",
    "plt.figure(figsize=(14, 4))\n",
    "plt.subplot(131)\n",
    "\n",
    "\n",
    "plt.boxplot([paises_ua.loc[:, colunas_antes].median().values, \n",
    "             paises_ua.loc[:, colunas_depois].median().values])\n",
    "plt.gca().set_xticklabels(['antes da UA', 'depois da UA'])\n",
    "plt.title('Investimentos em países membros')\n",
    "plt.ylabel('%GDP')\n",
    "plt.grid(which='both')\n",
    "plt.tight_layout()\n",
    "plt.subplot(132)\n",
    "plt.boxplot([paises_fora.loc[:, colunas_antes].median().values, \n",
    "             paises_fora.loc[:, colunas_depois].median().values])\n",
    "plt.gca().set_xticklabels(['antes da UA', 'depois da UA'])\n",
    "plt.title('Investimentos em países não membros')\n",
    "plt.ylabel('%GDP')\n",
    "plt.grid(which='both')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font size=\"2\">  <p style='text-align: justify;'>  Através dos boxplots, é possível perceber que o crecimento dos investimentos nos países membros depois que a UA foi criada é maior, quando comparado com os que não fazem. Enquanto a mediana dos membros aumentou cerca de 3%GDP, a dos países não membros diminuiu cerca de 0,25%GDP. \n",
    " <br>   \n",
    "**Análise dos países membros**:\n",
    "<p style='text-align: justify;'>\n",
    "Antes da criação da organização, metade dos países possuíam investimentos entre 17.91%GDP e 19.03%GDP com uma mediana de 18.45%GDP. Já depois da UA, metade dos países membros possuem investimentos entre 20.87%GDP e 23.02 %GDP, com uma mediana de 21.7%GDP.\n",
    "\n",
    "    \n",
    "**Análise dos países não membros**:\n",
    "<p style='text-align: justify;'>  \n",
    "Antes da criação da organização, metade dos países possuíam investimentos entre 21.3/%GDP e 12.6/%GDP com uma mediana de 22.7%GDP. Já depois da UA, metade dos países membros possuem investimentos entre 22.0%GDP e 23.23 %GDP, com uma mediana de 22.45%GDP.\n",
    "\n",
    "</font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Agora que a primeira parte da pergunta foi comprovada, é necessário observar as correlações entre os investimentos e as outras duas variáveis. Para isso, será levado em consideração apenas os países membros e os anos após a criação da UA. </font>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Análise bidimensional quantitativa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Algeria</th>\n",
       "      <td>84.4</td>\n",
       "      <td>84.7</td>\n",
       "      <td>85.0</td>\n",
       "      <td>85.3</td>\n",
       "      <td>85.6</td>\n",
       "      <td>85.8</td>\n",
       "      <td>86.1</td>\n",
       "      <td>86.3</td>\n",
       "      <td>86.6</td>\n",
       "      <td>86.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Benin</th>\n",
       "      <td>10.5</td>\n",
       "      <td>10.7</td>\n",
       "      <td>11.0</td>\n",
       "      <td>11.2</td>\n",
       "      <td>11.5</td>\n",
       "      <td>11.7</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>12.5</td>\n",
       "      <td>12.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Botswana</th>\n",
       "      <td>55.4</td>\n",
       "      <td>55.8</td>\n",
       "      <td>56.2</td>\n",
       "      <td>56.6</td>\n",
       "      <td>57.0</td>\n",
       "      <td>57.4</td>\n",
       "      <td>57.8</td>\n",
       "      <td>58.2</td>\n",
       "      <td>58.6</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          2002  2003  2004  2005  2006  2007  2008  2009  2010  2011\n",
       "country                                                             \n",
       "Algeria   84.4  84.7  85.0  85.3  85.6  85.8  86.1  86.3  86.6  86.8\n",
       "Benin     10.5  10.7  11.0  11.2  11.5  11.7  12.0  12.3  12.5  12.8\n",
       "Botswana  55.4  55.8  56.2  56.6  57.0  57.4  57.8  58.2  58.6  59.0"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#começando com o saneamento\n",
    "dados=pd.read_excel('saneamento.xlsx')\n",
    "investimentoss=dados.set_index(\"country\")\n",
    "membros=investimentoss[(investimentoss.index=='Algeria') |(investimentoss.index=='Benin')|(investimentoss.index=='Botswana')|(investimentoss.index=='Burkina Faso')|(investimentoss.index=='Burundi')|(investimentoss.index=='Cameroon')|(investimentoss.index=='Central African Republic')|(investimentoss.index=='Chad')|(investimentoss.index=='Comoros')|(investimentoss.index=='Congo, Dem. Rep.')|(investimentoss.index=='Egypt')|(investimentoss.index=='Equatorial Guinea')|(investimentoss.index=='Eritrea')|(investimentoss.index=='Gabon') |(investimentoss.index=='Gambia')|(investimentoss.index=='Ghana')|(investimentoss.index=='Guinea')|(investimentoss.index=='Guinea-Bissau')|(investimentoss.index=='Ivory Coast')|(investimentoss.index=='Kenya')|(investimentoss.index=='Madagascar') |(investimentoss.index=='Malawi')|(investimentoss.index=='Mali')|(investimentoss.index=='Mauritania')|(investimentoss.index=='Mauritius')|(investimentoss.index=='Morocco')|(investimentoss.index=='Mozambique')|(investimentoss.index=='Namibia')|(investimentoss.index=='Niger')|(investimentoss.index=='Nigeria')|(investimentoss.index=='Rwanda')|(investimentoss.index=='Senegal') |(investimentoss.index=='Sierra Leone')|(investimentoss.index=='South Africa')|(investimentoss.index=='Tanzania')|(investimentoss.index=='Togo')|(investimentoss.index=='Tunisia') |(investimentoss.index=='Uganda')|(investimentoss.index=='Zimbabwe')]\n",
    "saneamento=membros.iloc[:,2:12]\n",
    "saneamento.dropna(inplace=True)\n",
    "saneamento.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calculando as medianas da tabela de investimentos, para os mesmos anos e países.\n",
    "mdinvest=paises_ua.iloc[:,10:]\n",
    "medianin=mdinvest.median()\n",
    "medianinv=pd.DataFrame(data=medianin, columns = ['mediana_investimentos'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "#agora para o saneamento\n",
    "md1=saneamento.median()\n",
    "median=pd.DataFrame(data=md1, columns = ['mediana_saneamento'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mediana_investimentos</th>\n",
       "      <th>mediana_saneamento</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>16.75</td>\n",
       "      <td>28.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>20.10</td>\n",
       "      <td>28.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>21.10</td>\n",
       "      <td>29.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>20.80</td>\n",
       "      <td>30.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>21.15</td>\n",
       "      <td>30.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>22.25</td>\n",
       "      <td>30.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>23.60</td>\n",
       "      <td>31.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>22.65</td>\n",
       "      <td>31.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>23.15</td>\n",
       "      <td>32.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>24.00</td>\n",
       "      <td>32.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      mediana_investimentos  mediana_saneamento\n",
       "2002                  16.75               28.40\n",
       "2003                  20.10               28.85\n",
       "2004                  21.10               29.30\n",
       "2005                  20.80               30.15\n",
       "2006                  21.15               30.50\n",
       "2007                  22.25               30.65\n",
       "2008                  23.60               31.15\n",
       "2009                  22.65               31.55\n",
       "2010                  23.15               32.00\n",
       "2011                  24.00               32.45"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#juntando as tabelas \n",
    "tabela=medianinv.join(median, how='inner')\n",
    "tabela"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlação: 0.8967041376391687\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#observando a correlação e plotando o gráfico de dispersão\n",
    "cor=tabela.corr()\n",
    "\n",
    "sns.regplot(tabela['mediana_investimentos'], tabela['mediana_saneamento'], color=('red'))\n",
    "plt.xlabel('investimentos (%GDP)')\n",
    "plt.ylabel('acesso ao saneamento (%)')\n",
    "plt.title(\"Correlação entre investimentos e saneamento\")\n",
    "plt.grid()\n",
    "plt.show()\n",
    "\n",
    "print(\"Correlação: {}\\n\".format(cor['mediana_investimentos']['mediana_saneamento']))\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<p style='text-align: justify;'> \n",
    "A partir do gráfico, e possível perceber que existe pouca dispersão nos pontos, que também pode ter sido causada por estarmos observando uma janela de dados relativamente pequena. Mesmo assim, existe uma alta correlação(0.89). Com isso, podemos perceber que o acesso ao saneamento e os investimentos estão associados. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Uma vez que a correlação entre saneamento obtida foi alta, é necessário observar agora a correlação entre saneamento e expectativa de vida:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>2011</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>country</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Algeria</th>\n",
       "      <td>74.4</td>\n",
       "      <td>74.5</td>\n",
       "      <td>75.1</td>\n",
       "      <td>75.4</td>\n",
       "      <td>75.6</td>\n",
       "      <td>75.9</td>\n",
       "      <td>76.1</td>\n",
       "      <td>76.3</td>\n",
       "      <td>76.5</td>\n",
       "      <td>76.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Angola</th>\n",
       "      <td>54.5</td>\n",
       "      <td>55.1</td>\n",
       "      <td>55.7</td>\n",
       "      <td>56.5</td>\n",
       "      <td>57.0</td>\n",
       "      <td>57.8</td>\n",
       "      <td>58.6</td>\n",
       "      <td>59.3</td>\n",
       "      <td>60.1</td>\n",
       "      <td>60.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Benin</th>\n",
       "      <td>58.2</td>\n",
       "      <td>58.6</td>\n",
       "      <td>59.0</td>\n",
       "      <td>59.5</td>\n",
       "      <td>59.9</td>\n",
       "      <td>60.3</td>\n",
       "      <td>60.8</td>\n",
       "      <td>61.4</td>\n",
       "      <td>61.8</td>\n",
       "      <td>62.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         2002  2003  2004  2005  2006  2007  2008  2009  2010  2011\n",
       "country                                                            \n",
       "Algeria  74.4  74.5  75.1  75.4  75.6  75.9  76.1  76.3  76.5  76.7\n",
       "Angola   54.5  55.1  55.7  56.5  57.0  57.8  58.6  59.3  60.1  60.9\n",
       "Benin    58.2  58.6  59.0  59.5  59.9  60.3  60.8  61.4  61.8  62.2"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#abrindo o arquivo e filtrando o dataframe\n",
    "data=pd.read_excel('expectativadevida.xlsx')\n",
    "investimento=data.set_index(\"country\")\n",
    "expec=investimento[(investimento.index=='Algeria') |(investimento.index=='Angola')|(investimento.index=='Benin')|(investimento.index=='Botswana')|(investimento.index=='Burkina Faso')|(investimento.index=='Burundi')|(investimento.index=='Cape Verde')|(investimento.index=='Cameroon')|(investimento.index=='Central African Republic')|(investimento.index=='Chad')|(investimento.index=='Comoros')|(investimento.index=='Congo, Dem. Rep.')|(investimento.index=='Djibouti')|(investimento.index=='Egypt')|(investimento.index=='Equatorial Guinea')|(investimento.index=='Eritrea')|(investimento.index=='Eswatini')|(investimento.index=='Ethiopia')|(investimento.index=='Gabon') |(investimento.index=='Gambia')|(investimento.index=='Ghana')|(investimento.index=='Guinea')|(investimento.index=='Guinea-Bissau')|(investimento.index=='Ivory Coast')|(investimento.index=='Kenya')|(investimento.index=='Lesotho')|(investimento.index=='Liberia')|(investimento.index=='Lybia') |(investimento.index=='Madagascar') |(investimento.index=='Malawi')|(investimento.index=='Mali')|(investimento.index=='Mauritania')|(investimento.index=='Mauritius')|(investimento.index=='Morocco')|(investimento.index=='Mozambique')|(investimento.index=='Namibia')|(investimento.index=='Niger')|(investimento.index=='Nigeria')|(investimento.index=='Rwanda')|(investimento.index=='Senegal') |(investimento.index=='Seychelles') |(investimento.index=='Congo, Rep')|(investimento.index=='Sierra Leone')|(investimento.index=='Somalia')|(investimento.index=='South Africa')|(investimento.index=='Tanzania')|(investimento.index=='Togo')|(investimento.index=='Tunisia') |(investimento.index=='Uganda')|(investimento.index=='Zambia') |(investimento.index=='Zimbabwe')]\n",
    "expectativa=expec.iloc[:,202:212]\n",
    "expectativa.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calculando as medianas\n",
    "med=expectativa.median()\n",
    "med\n",
    "mediana2=pd.DataFrame(data=med, columns = ['mediana_expectativadevida'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mediana_expectativadevida</th>\n",
       "      <th>mediana_saneamento</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>54.5</td>\n",
       "      <td>28.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>55.1</td>\n",
       "      <td>28.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>55.8</td>\n",
       "      <td>29.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>56.5</td>\n",
       "      <td>30.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>57.1</td>\n",
       "      <td>30.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>57.8</td>\n",
       "      <td>30.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>58.6</td>\n",
       "      <td>31.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>59.3</td>\n",
       "      <td>31.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>60.1</td>\n",
       "      <td>32.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>60.9</td>\n",
       "      <td>32.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      mediana_expectativadevida  mediana_saneamento\n",
       "2002                       54.5               28.40\n",
       "2003                       55.1               28.85\n",
       "2004                       55.8               29.30\n",
       "2005                       56.5               30.15\n",
       "2006                       57.1               30.50\n",
       "2007                       57.8               30.65\n",
       "2008                       58.6               31.15\n",
       "2009                       59.3               31.55\n",
       "2010                       60.1               32.00\n",
       "2011                       60.9               32.45"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_san_exp=mediana2.join(median, how='inner')\n",
    "corr_san_exp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlação: 0.9918385144211983\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#observando a correlação e plotando o gráfico de dispersão\n",
    "cor=corr_san_exp.corr()\n",
    "\n",
    "sns.regplot(corr_san_exp['mediana_saneamento'], corr_san_exp['mediana_expectativadevida'], color=('red'))\n",
    "plt.xlabel('acesso ao saneamento (%)')\n",
    "plt.ylabel('expectativa (anos)')\n",
    "plt.title(\"Correlação entre saneamento e expectativa de vida\")\n",
    "plt.grid()\n",
    "plt.show()\n",
    "\n",
    "print(\"Correlação: {}\\n\".format(cor['mediana_saneamento']['mediana_expectativadevida']))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Com esse gráfico de dispersão, conseguimos observar que as duas variáveis estão intimamente associadas, com uma correlação de 0.99. Com isso, validamos a hipótese de que os investimentos causam, indiretamente, um aumento na expectativa de vida."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Conclusão"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Responda à pergunta, argumento da melhor forma possível com base nos dados"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<p style='text-align: justify;'>      \n",
    "Depois de toda a análise de dados, é possível concluir que a hipótese criada no começo do projeto foi validada.\n",
    "A primeira pergunta foi respondida através de dados sobre a % de investimentos por renda per capita, sempre levando em consideração 10 anos antes (1992-2001), e 10 anos depois (2002-2011). Através do boxplot foi possível observar que enquanto a mediana dos países membros aumentou cerca de 3%, a dos que não pertenciam à UA na verdade abaixou cerca de 0,25%. Isso é razoável pois que a União Africana criou o projeto de incentivo ecônomico, no qual promovia que os países extrangeiros investissem na África. \n",
    "    \n",
    "<p style='text-align: justify;'>    \n",
    "Com isso, foi razoável descobrir que a correlação entre o saneamento e o aumento dos investimentos era alta e com uma associação positiva, mostrando que  pois com o aumento dos investimentos, o governo passou a conseguir destinar uma maior quantia para melhorias no saneamento, lembrando que como esse crescimento foi relativamente baixo, ainda existem muitas áreas sem acesso. Essa análise foi feita através de uma base de dados sobre o acesso ao saneamento e água potável, e foram utilizados apenas os anos depois da criação da União Africana.\n",
    "    \n",
    "<p style='text-align: justify;'>      \n",
    "    Com a melhora no acesso ao saneamento e água potável, a proliferação de doenças diminui, junto com a taxa de mortalidade infantil, que abaixou cerca de 35% desde 2000 segundo o site de rigor acadêmico \"the conversation\", e, portanto, a expectativa de vida aumenta. Isso foi comprovado com o gráfico de dispersão e correlação de quase 1.0, mostrando que os dois fatores estão intimamente ligados.\n",
    " <p style='text-align: justify;'>   \n",
    "    Para futuras melhorias, seria ideal se a janela de dados analisados para as correlações e gráficos de dispersão fosse maior, o que não foi possível em primeiro momento devido a falta de dados. Isso pode ter causado uma conclusão ilusória, e portanto existe a possibilidade de a correlação ser menor.\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Fontes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- https://theconversation.com/lifestyle-diseases-could-scupper-africas-rising-life-expectancy-107220\n",
    "\n",
    "- https://pt.wikipedia.org/wiki/Uni%C3%A3o_Africana"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
